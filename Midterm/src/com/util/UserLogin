package com.util;

import java.awt.HeadlessException;
import java.sql.*;

import javax.swing.*;

public class UserLogin {

	private String userLogin = null;
	private String userPassword = null;
	private ResultSet rs = null;
	private ConnectToDB dbConnection;
	private static final String LOCK_OUT_CODE = "xxxxxx";

	public UserLogin() throws HeadlessException, SQLException {

		// connect to DB
		try {

			dbConnection = new ConnectToDB("localhost", "root", "$up3RmAr10!");
			dbConnection.execute("USE DBProg32758");

		} catch (SQLException e) {

			JOptionPane.showMessageDialog(null, e.getMessage() + "SQL State: "

					+ e.getSQLState() + " ErrorCode: " + e.getErrorCode(), "Car Racing Game",

					javax.swing.JOptionPane.WARNING_MESSAGE);

		}

		// check if user defined login and password are valid
		if (isValidLogin()) {

			// TODO: open page to play game

			// inform user after 3 failed attempts that they have been locked out of the database
		} else {

			JOptionPane.showMessageDialog(null,
					"Your account has been locked\n Please contact your Database " + "Administrator", "Car Racing Game",
					JOptionPane.INFORMATION_MESSAGE);
			try {

				dbConnection.executeUpdate(
						String.format("UPDATE Players SET Password = '%s' WHERE Login = '%s'", LOCK_OUT_CODE, userLogin));

			} catch (SQLException e) {

				e.printStackTrace();
			}
		}
	}

	
	public boolean isValidLogin() throws HeadlessException, SQLException {

		boolean valid = false;

		// check for valid login and password combo 3 times
		for (int i = 0; i < 3; i++) {

			// Create pop up window for user to enter login and password
			JLabel loginLabel = new JLabel("User Login: ");
			JTextField login = new JTextField();
			JLabel passwordLabel = new JLabel("Password: ");
			JTextField password = new JPasswordField();
			Object[] userInput = { loginLabel, login, passwordLabel, password };

			// show login pop up window to user
			JOptionPane.showConfirmDialog(null, userInput, "Please enter your login and password",
					JOptionPane.DEFAULT_OPTION);

			/* account for empty fields and prompt user for corrections to mistakes
			while(userInput[1].equals(null) || userInput[3].equals(null) || userInput[3].toString().equals(LOCK_OUT_CODE)) {
				JOptionPane.showMessageDialog(null, "Login and Password fields can not be empty\n Your password can not be 'xxxxxx'",
						"Car Racing Game", JOptionPane.WARNING_MESSAGE);
				
				JOptionPane.showConfirmDialog(null, userInput, "Please enter your login and password",
						JOptionPane.DEFAULT_OPTION);
			}*/
			
			// capture user data
			userLogin = login.getText();
			userPassword = password.getText();

			
			// check existence of user login
			try {

				rs = dbConnection.executeQuerry(String.format("SELECT * FROM Players WHERE Login = '%s'", userLogin));

			} catch (SQLException e) {

				e.printStackTrace();
			}

			if (rs.next()) {
				// check if user account is already locked and break loop if so
				if (rs.getString("Password").equals(LOCK_OUT_CODE)) {
					
					
					break;
					
				// check password
				} else if (rs.getString("Password").equals(userPassword)) {

					valid = true;
					break;

					// inform user that user login and/or password are incorrect
				} else {

					JOptionPane.showMessageDialog(null,
							"The Login and Password are not correct\n Please try again"
									+ " if you are already registered or complete your registration if you are not",
							"Car Racing Game", JOptionPane.INFORMATION_MESSAGE);

				}
			} else {

				JOptionPane.showMessageDialog(null,
						"The Login and Password are not correct\n Please try again"
								+ " if you are already registered or complete your registration if you are not",
						"Car Racing Game", JOptionPane.INFORMATION_MESSAGE);
			}
		}
		
		// returns true if valid user login and password are given, false if not
		return valid;
	}
}
